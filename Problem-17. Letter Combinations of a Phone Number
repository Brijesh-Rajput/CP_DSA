//https://leetcode.com/problems/letter-combinations-of-a-phone-number/
class Solution {
public:
    map<char,string> mp;//Globally declared so it can be used directly

    void helper(string &digits,int indx,vector<string> &ans,string s){
        // cout<<indx<<" ";
        if(digits.size()==0) return; //Corner cases:- b'coz vector of string should not contain the empty string.
        if(indx==digits.size()){
            ans.push_back(s);
            // cout<<s<<" ";
            return;
        }
        string temp=mp[digits[indx]];
        // cout<<temp;
        for(int i=0; i<temp.size() ;i++){
            s.push_back(temp[i]);
            helper(digits,indx+1,ans,s);
            s.pop_back();
        }

    }
    vector<string> letterCombinations(string digits) {
        
        mp['2']="abc";
        mp.insert(pair<char,string>('3',"def"));
        mp['4']="ghi";
        mp['5']="jkl";
        mp['6']="mno";
        mp['7']="pqrs";
        mp['8']="tuv";
        mp['9']="wxyz";

        vector<string> ans;
        helper(digits,0,ans,"");
        return ans;        
    }
};
//============================Full Code==========================
/*
#include<bits/stdc++.h>
#define ll long long int
#define l long int
#define all(x) x.begin(),x.end()
using namespace std;
map<char,string> mp;//Globally declared so it can be used directly

void helper(string &digits,int indx,vector<string> &ans,string s){
    // cout<<indx<<" ";
    if(digits.size()==0) return; //Corner cases:- b'coz vector of string should not contain the empty string.
    if(indx==digits.size()){
        ans.push_back(s);
        // cout<<s<<" ";
        return;
    }
    string temp=mp[digits[indx]];
    // cout<<temp;
    for(int i=0; i<temp.size() ;i++){
        s.push_back(temp[i]);
        helper(digits,indx+1,ans,s);
        s.pop_back();
    }

}
vector<string> letterCombinations(string digits) {
    
    mp['2']="abc";
    mp.insert(pair<char,string>('3',"def"));
    mp['4']="ghi";
    mp['5']="jkl";
    mp['6']="mno";
    mp['7']="pqrs";
    mp['8']="tuv";
    mp['9']="wxyz";

    vector<string> ans;
    helper(digits,0,ans,"");
    return ans;        
}
void solve(){
    string s;
    cin>>s;

    vector<string> ans = letterCombinations(s);
    for(auto x: ans)
        cout<<x<<endl;
    cout<<endl;
}

int main(){
#ifndef ONLINE_JUDGE
    freopen("Input.txt","r",stdin); 
    freopen("Output.txt","w",stdout);
#endif

    ios_base::sync_with_stdio(false); cin.tie(NULL);

    ll testcases=1;
    cin>>testcases;
    while(testcases--){
        solve();
    }

}
*/
