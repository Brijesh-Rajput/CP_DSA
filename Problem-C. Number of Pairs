//https://codeforces.com/problemset/problem/1538/C
#include<bits/stdc++.h>
#define l long int 
#define ll long long int
#define endl '\n'
#define all(x) x.begin(),x.end()
#define pb push_back
#define mod (int)(1e9+7)
#define printNO cout<<"NO";
#define printYES cout<<"YES";
using namespace std;
/*------------------------------------------------------------------------------------*/
/*------------------------------ Standard Algo ---------------------------------------*/
/*------------------------------------------------------------------------------------*/

//------> Prime Factorization 
vector<int> prime_factors_array;
// set<int> prime_factors_array; //for distinct prime factors 
void prime_factorization(int n){  //TC=Omega(logn)  TC=O(sqrt(n))  SC=O(logn) 
    for(int i=2; i*i<=n; i++){   //Q. why i*i<=n ?  Proof this mathematically 
        while(!(n%i)){
            prime_factors_array.pb(i);
            n/=i;
        }
        if(n==1) break;
    }
    //if(n>1)
    if(n!=1) prime_factors_array.pb(n);
}

//------> Prime Numbers 
bool is_prime(int n){ //TC=O(sqrt(n))
    for(int i=2; i*i<=n; i++)
        if(!(n%i)) return false;
    return n>1; //if(n<=1) return false;
}

//------> Sieve of Erathosthenes 
const int array_size=1e8+1;  //!-based indexing 
bool sieve_array[array_size];

void sieve(int n){ //TC=O(n*log(logn))  SC=O(1e8+1)=O(1)
    //n<=1e8
    fill(sieve_array,sieve_array+n+1,true); //if sieve[i]==true => i is prime 
    sieve_array[0]=sieve_array[1]=false;
    
    for(int i=2; i*i<=n; i++) //Q. why i*i<=n ?? ==> see my notes 
        if(sieve_array[i])
            for(int j=i*i; j<=n; j+=i) //Q. why j=i*i ? why not j=2*i ? why j+=i ? ==> see my notes  
                sieve_array[j]=false;

}

//------> Modular Power and Binary exponentiation
long long binpow(long long a, long long b, long long m) {
    a %= m;
    long long res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a % m;
        a = a * a % m;
        b >>= 1;
    }
    return res;
}
//Do operator overloading for string input and vector input and as well as vector output.
//for both 1-based indexing vector and string input and 0-based indexing vector input.
/*------------------------------------------------------------------------------------*/
/*------------------------------ THE END ---------------------------------------------*/
/*------------------------------------------------------------------------------------*/
ll number_of_pairs_less_than(vector<int>& vec, int number){
    //TC=O(n)
    int n=vec.size();
    int i=0, j=n-1; //Two Pointer 
    ll total_count=0;
    while(i<j){
        if(vec[i]+vec[j] < number){
            total_count+=j-i;
            i++;
        }
        else if(vec[i]+vec[j] >= number){ j--; }
    }
    return total_count;
}
void solve(){
    int n,left,right; cin>>n>>left>>right;
    vector<int> vec(n);
    for(auto &x: vec) cin>>x; 

    sort(all(vec)); //O(nlogn) => TC=O(3*10^6) as n=2*10^5
    
    //Therefore, Total TC=O(2n)
    cout<< number_of_pairs_less_than(vec,right+1) - number_of_pairs_less_than(vec,left);
    cout<<endl;
}

int main(){

    // #ifndef ONLINE_JUDGE
    //     freopen("Input.txt","r",stdin);
    //     freopen("Output.txt","w",stdout);
    // #endif

    ios_base::sync_with_stdio(false); cin.tie(NULL);

    ll testcases=1; 
    cin>>testcases;

    //TC=O(nloglogn)
    // sieve((int)(1e6)); 
    //cout<<"Hello"<<N;

    while(testcases--){
        solve();
    }

}
