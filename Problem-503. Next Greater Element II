//https://leetcode.com/problems/next-greater-element-ii/
class Solution {
public:
    vector<int> nextGreaterElements(vector<int>& nums) {
        vector<int> updated_nums(nums);
        updated_nums.insert(updated_nums.end(),nums.begin(),nums.end()); //we have to pass iterator or index or size ? see documentation. INSERT FUNC() TC ?
        // for(auto x: updated_nums)
        //     cout<<x<<" ";

        vector<int> answer;
        for(int i=0; i<nums.size(); i++){
            int j=i+1;
            while(j <= i+nums.size()-1){
                    if(updated_nums[i]<updated_nums[j]){ answer.push_back(updated_nums[j]); break; }
                    j++;
            }
            if(j == i+nums.size()){ answer.push_back(-1); }
        }
        return answer;
    }
};
//======================Full Code=====================
#include<bits/stdc++.h>
#define ll long long int
#define l long int
#define all(x) x.begin(),x.end()
using namespace std;
vector<int> nextGreaterElements(vector<int>& nums) {
    vector<int> updated_nums(nums);
    updated_nums.insert(updated_nums.end(),all(nums)); //we have to pass iterator or index or size ? see documentation. INSERT FUNC() TC ?
    // for(auto x: updated_nums)
    //     cout<<x<<" ";

    vector<int> answer;
    for(int i=0; i<nums.size(); i++){
       int j=i+1;
       while(j <= i+nums.size()-1){
            if(updated_nums[i]<updated_nums[j]){ answer.push_back(updated_nums[j]); break; }
            j++;
       }
       if(j == i+nums.size()){ answer.push_back(-1); }
    }
    return answer;
}
void solve(){
    vector<int> vec={1,2,3,4,3};
    for(auto x: nextGreaterElements(vec))
        cout<<x<<" ";
}

int main(){
#ifndef ONLINE_JUDGE
    freopen("Input.txt","r",stdin); 
    freopen("Output.txt","w",stdout);
#endif

    ios_base::sync_with_stdio(false); cin.tie(NULL);

    ll testcases=1;
    // cin>>testcases;
    while(testcases--){
        solve();
    }

}
